// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TTWebApp.DBLayer;

namespace TTWebApp.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TTWebApp.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NickName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 12,
                            DateOfCreation = new DateTime(2002, 12, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Alex",
                            NickName = "SaneKing"
                        },
                        new
                        {
                            Id = 2,
                            Age = 20,
                            DateOfCreation = new DateTime(2002, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Kir",
                            NickName = "CrimsonDead"
                        });
                });

            modelBuilder.Entity("TTWebApp.Models.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AuthorId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<float?>("Cost")
                        .HasColumnType("real");

                    b.Property<DateTime>("DateOfCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumberOfPurchase")
                        .HasColumnType("int");

                    b.Property<float?>("Size")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Photos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            Cost = 5f,
                            DateOfCreation = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Link = "https://ya.cc/t/bvybNZ4V3FerDY",
                            Name = "Red House",
                            NumberOfPurchase = 79,
                            Size = 123f
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            Cost = 88f,
                            DateOfCreation = new DateTime(2021, 11, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Link = "https://ya.cc/t/Ny1sR0Cl3Ferdt",
                            Name = "Nature",
                            NumberOfPurchase = 2,
                            Size = 432f
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 2,
                            Cost = 44f,
                            DateOfCreation = new DateTime(2021, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Link = "https://ya.cc/t/75GdCcRs3Ferjc",
                            Name = "Green field",
                            NumberOfPurchase = 1,
                            Size = 2234f
                        });
                });

            modelBuilder.Entity("TTWebApp.Models.Text", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AuthorId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Cost")
                        .HasColumnType("real");

                    b.Property<DateTime>("DateOfCreation")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NumberOfPurchase")
                        .HasColumnType("int");

                    b.Property<float?>("Size")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Texts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 2,
                            Content = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi scelerisque dapibus magna at blandit. Sed efficitur ultricies ipsum eget lobortis. Nullam facilisis porta sapien, in sodales erat commodo eu. Duis nisl velit, pharetra id nisi vel, hendrerit varius massa. Cras pellentesque imperdiet est, at bibendum nisl ullamcorper id. Vestibulum commodo sagittis leo, vel feugiat lorem euismod ac. Praesent ac odio nulla. Sed pharetra et ipsum sit amet accumsan. Aliquam erat volutpat. ",
                            Cost = 44f,
                            DateOfCreation = new DateTime(2022, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfPurchase = 3,
                            Size = 213f
                        });
                });

            modelBuilder.Entity("TTWebApp.Models.Photo", b =>
                {
                    b.HasOne("TTWebApp.Models.Author", null)
                        .WithMany("Photos")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TTWebApp.Models.Text", b =>
                {
                    b.HasOne("TTWebApp.Models.Author", null)
                        .WithMany("Texts")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TTWebApp.Models.Author", b =>
                {
                    b.Navigation("Photos");

                    b.Navigation("Texts");
                });
#pragma warning restore 612, 618
        }
    }
}
